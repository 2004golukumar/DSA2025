 int xor1 = 0;

    // Step 1: Get xor of all array and 1 to n
    for (int i = 0; i < n; i++) xor1 ^= arr[i];
    for (int i = 1; i <= n; i++) xor1 ^= i;

    // Step 2: Rightmost set bit
    int set_bit = xor1 & ~(xor1 - 1);

    int x = 0, y = 0;

    // Step 3: Divide numbers in two sets
    for (int i = 0; i < n; i++) {
        if (arr[i] & set_bit)
            x ^= arr[i];
        else
            y ^= arr[i];
    }

    for (int i = 1; i <= n; i++) {
        if (i & set_bit)
            x ^= i;
        else
            y ^= i;
    }

    // Step 4: Check which is repeating
    int count = 0;
    for (int num : arr)
        if (num == x) count++;

    if (count == 2)
        return {x, y};  // x = repeating, y = missing
    else
        return {y, x};  // y = repeating, x = missing
}
